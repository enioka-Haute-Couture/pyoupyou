name: Django CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  check:
    runs-on: ubuntu-latest
    env:
      PYOUPYOU_ENV: dev
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install pipenv
      run: pip install pipenv
    - name: Cache pipenv virtualenv
      id: cache-pipenv
      uses: actions/cache@v1
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
    - name: Install dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true' 
      run: pipenv install --dev
    - name: Check migrations
      run: pipenv run ./manage.py makemigrations --check
    - name: Check coding style (black)
      run: pipenv run black --check .
    - name: Check safety
      run: PIPENV_PYUP_API_KEY="" pipenv check -i 44716 -i 44717 -i 44715 -i 43453
    - name: Check requirements.txt is up to date
      run: |
        pipenv requirements > requirements2.txt
        diff requirements.txt requirements2.txt
  test:
    runs-on: ubuntu-latest
    env:
      PYOUPYOU_ENV: dev
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8]
    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: pyoupyou
        ports: [ '3306:3306' ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pipenv
      run: pip install pipenv
    - name: Cache pipenv virtualenv
      id: cache-pipenv
      uses: actions/cache@v1
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
    - name: Install dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true' 
      run: pipenv install --dev
    - name: test
      run: |
        cp pyoupyou/settings/local.py.ci pyoupyou/settings/local.py
        pipenv run pip install mysqlclient
        pipenv run coverage run ./manage.py test
        
